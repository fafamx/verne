<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" width="100" height="130" dataChange="dataChangeHandler(event)" click="clickHandler(event)" buttonMode="true">
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenMax;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.components.List;
			protected var item:Object;
			
			protected function dataChangeHandler(event:FlexEvent):void
			{
				if(data)
				{
					item = null;
					labelDisplay.text = data.title;
					storageDisplay.text = data.storage;
					bitmap.source = null;
					if(data.storage <= 0)
					{
						alpha = .5;
					}
					else
					{
						alpha = 1;
					}
					if(data.photo)
					{
						bitmap.source = String(data.photo);
					}
				}
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				if(data.storage <= 0)
				{
					alpha = .5;
				}
				else
				{
					alpha = 1;
				}
				
				if(data.storage <= 0)
				{
					return;
				}
				
				
				var selected:ArrayCollection = Verne.applicationInterface.factors.fastForm.selected;
				
				if(data.selected)
				{
					data.storage -=1;
					
					if(data.storage == 0)
					{
						selected.removeItemAt(itemIndex);
					}
					
					Verne.applicationInterface.factors.fastForm.selectedProducts.dataProvider = null;
					Verne.applicationInterface.factors.fastForm.selectedProducts.dataProvider = selected;
					return;
				}
				
				for(var i:uint = 0;i<selected.length;i++)
				{
					var selectedItem:Object = selected.getItemAt(i);
					if(data.product_id == selectedItem.product_id)
					{
						if(data.storage == selectedItem.storage)
						{
							TweenMax.to(this,0,{colorTransform:{tint:0xff0000, tintAmount:0}});
							TweenMax.from(this,.5,{colorTransform:{tint:0xff0000, tintAmount:0.5},delay:.1});
							return;
						}
						selectedItem.storage +=1;
						Verne.applicationInterface.factors.fastForm.selectedProducts.dataProvider = null;
						Verne.applicationInterface.factors.fastForm.selectedProducts.dataProvider = selected;
						return;
					}
				}
				
				if(!data.selected)
				{
					item = {product_id:data.product_id,photo:String(bitmap.source),title:data.title,storage:1,selected:true,item:this,sell_price:data.sell_price};
					selected.addItem(item);
				}
			}
			
		]]>
	</fx:Script>
	<s:Rect top="0" bottom="0" left="0" right="0">
		<s:fill>
			<s:SolidColor color="0xeeeeee"/>
		</s:fill>
	</s:Rect>
	<s:Rect top="1" bottom="1" left="1" right="1">
		<s:fill>
			<s:SolidColor color="0x929292"/>
		</s:fill>
	</s:Rect>
	<s:Rect id="back" top="2" bottom="2" left="2" right="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xe0e0e0"/>
				<s:GradientEntry color="0xcdcece"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" horizontalAlign="center" verticalCenter="0" horizontalCenter="0">
		<s:Label id="labelDisplay" width="80" textAlign="center"/>
		<s:Label id="storageDisplay" fontSize="15" color="0x666666"/>
		<s:Image id="bitmap" width="64" height="64" fillMode="scale" smooth="true" smoothingQuality="high">
			<s:filters>
				<s:DropShadowFilter distance="1" quality="3"/>
			</s:filters>
		</s:Image>
	</s:VGroup>
	
</s:ItemRenderer>
