<?xml version="1.0" encoding="utf-8"?>
<forms:AbstractForm xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:elements="com.teamatec.verne.ui.elements.*"
					   xmlns:forms="com.teamatec.verne.ui.elements.forms.*"
					   width="100%" height="100%" xmlns:components="com.teamatec.verne.ui.components.*" creationComplete="creationCompleteHandler(event)" xmlns:validators="com.teamatec.verne.validators.*">
	
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenLite;
			import com.greensock.TweenNano;
			import com.maclema.mysql.MySqlToken;
			import com.maclema.mysql.ResultSet;
			import com.teamatec.utils.DateUtil;
			import com.teamatec.utils.NumberUtil;
			import com.teamatec.verne.models.*;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.validators.Validator;
			
			import spark.events.TextOperationEvent;
			
			protected var factorItems:ArrayCollection;
			protected var sequence:SequenceModel;
			
			protected function submit_clickHandler(event:MouseEvent):void
			{
				cleanSummery();
				var validationResult:Array = Validator.validateAll([titleValidation]);
				TweenNano.to(message,.5,{alpha:0});
				if(validationResult.length == 0)
				{
					submit.enabled = false;
					var splitedDate:Array = date.text.split("/");
					var itemDate:Vector.<uint> = Converter.changeShToM(splitedDate[0],splitedDate[1],splitedDate[2]);
					var dbData:Array = [type.selectedValue,title.text,description.text,company_id.selectedItem.value,client_id.selectedItem.value,serial.text,itemDate.join("-"),0,is_cash.selectedValue,condition.text,totalDiscount.text,totalTax.text];
					if(updateData)
					{
						model.update(dbData,"factor_id = "+updateData.factor_id);
						if(type.selectedValue != updateData.type)
						{
							sequence.plusPlus(type.selectedValue.toString());
						}
					}
					else
					{
						model.insert(dbData);
						sequence.plusPlus(type.selectedValue.toString());
					}
					model.addEventListener(Event.COMPLETE,storeComplete);
				}
			}
			
			protected function cleanSummery():void
			{
				TweenLite.to(summery,.5,{alpha:0});
				summery.removeAllElements();
			}
			
			protected function showSummery():void
			{
				TweenLite.to(summery,.5,{alpha:1});
			}
			
			protected function storeComplete(event:Event):void
			{
				TweenNano.to(message,.5,{alpha:1});
				submit.enabled = true;
				if(updateData)
				{
					currentView.currentState = "grid";
					currentView.selectData();
				}
			}
			
			public override function creationCompleteHandler(event:FlexEvent):void
			{
				model = new FactorModel();
				var today:Date = new Date();
				var shamsi:Vector.<uint> = Converter.changeMToSh(today.getFullYear(),today.getMonth()+1,today.date);
				date.text = shamsi.join("/");
				var client:ClientModel = new ClientModel();
				client.selectALL(allClients);
				if(updateData)
				{
					updateAction();
				}
				
				sequence = new SequenceModel();
				sequence.selectALL(allSequences);
			}
			
			protected function allSequences(data:ResultSet, token:*):void
			{
				factorSequence.removeAllElements();
				for(var i:uint = 0;i<data.getRows().length;i++)
				{
					var row:Object = data.getRows()[i];
					var button:RadioButton = new RadioButton();
					button.value = row.sequence_id;
					button.label = row.title;
					button.group = type;
					factorSequence.addElement(button);
				}
				
				if(updateData)
				{
					type.selectedValue = updateData.type;
				}
			}
			
			public function allClients(data:ResultSet, token:*):void
			{
				var items:ArrayCollection = data.getRows();
				var companies:ArrayCollection = new ArrayCollection();
				company_id.dataProvider = companies;
				client_id.dataProvider = companies;
				for(var i:uint=0;i<items.length;i++)
				{
					var item:Object = items.getItemAt(i);
					companies.addItem({label:item.title,value:item.client_id});
					
					if(updateData && updateData.company_id == item.client_id)
					{
						company_id.selectedIndex = i;
					}
					
					if(updateData && updateData.client_id == item.client_id)
					{
						client_id.selectedIndex = i;
					}
				}
			}
			
			public function updateAction():void
			{
				title.text = updateData.title;
				description.text = updateData.description;
				serial.text = updateData.serial;
				var shamsiDate:Vector.<uint> = Converter.changeMToSh(updateData.factor_date.getFullYear(),updateData.factor_date.getMonth()+1,updateData.factor_date.getDate());
				date.text = shamsiDate[0]+"/"+shamsiDate[1]+"/"+shamsiDate[2];
				is_cash.selectedValue = updateData.is_cash;
				condition.text = updateData.factor_condition;
				totalDiscount.text = updateData.discount;
				totalTax.text = updateData.tax;
			}
			
			public override function clean():void
			{
				super.clean();
				title.text = "";
				description.text = "";
				type.selectedValue = null;
				is_cash.selectedValue = null;
				condition.text = "";
				var today:Date = new Date();
				var shamsi:Vector.<uint> = Converter.changeMToSh(today.getFullYear(),today.getMonth()+1,today.date);
				date.text = shamsi.join("/");
				totalDiscount.text = "";
				totalTax.text = ""
			}
			
			protected function type_changeHandler(event:Event):void
			{
				if(!updateData || updateData.type != type.selectedValue)
				{
					sequence.selectALL(sequenceCountComplete," WHERE sequence_id="+type.selectedValue);
				}
				else
				{
					serial.text = updateData.serial;
				}
			}
			
			protected function sequenceCountComplete(data:ResultSet, token:*):void
			{
				var item:Object = data.getRows()[0];
				serial.text = String(item.value + 1);
			}

			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:StringValidator id="titleValidation" source="{title}" property="text" required="true" requiredFieldError="مقدار این فیلد اجباری می باشد."/>
		<s:RadioButtonGroup id="is_cash"/>
		<s:RadioButtonGroup id="type" change="type_changeHandler(event)"/>
	</fx:Declarations>
	<s:Form id="form" width="100%" height="100%" minWidth="550">
		<s:FormHeading width="100%" label="فرم صدور فاکتور"/>
		<s:FormItem label="نوع" width="100%">
			<s:HGroup id="factorSequence" width="100%">
				<!--<s:RadioButton groupName="type" value="SELL" label="فاکتور فروش"/>
				<s:RadioButton groupName="type" value="BUY" label="فاکتور خرید"/>
				<s:RadioButton groupName="type" value="PRE" label="پیش فاکتور فروش"/>
				<s:RadioButton groupName="type" value="RETURN" label="فاکتور مرجوعی"/>
				<s:RadioButton groupName="type" value="OTHER" label="سایر"/>-->
			</s:HGroup>
		</s:FormItem>
		<s:FormItem label="عنوان فاکتور" width="100%">
			<s:TextInput id="title" width="250"/>
		</s:FormItem>
		<s:FormItem label="توضیحات" width="100%">
			<s:TextArea id="description" width="450" height="100"/>
		</s:FormItem>
		<s:FormItem label="کارفرما" width="100%">
			<s:ComboBox id="company_id" width="250"/>
		</s:FormItem>
		<s:FormItem label="مشتری" width="100%">
			<s:ComboBox id="client_id" width="250"/>
		</s:FormItem>
		<s:FormItem label="شماره سریال" width="100%">
			<s:TextInput id="serial" width="100" direction="ltr" textAlign="center"/>
		</s:FormItem>
		<s:FormItem label="تاریخ" width="100%">
			<s:TextInput id="date" width="100" direction="ltr" textAlign="center"/>
		</s:FormItem>
		<s:FormItem label="نحوه پرداخت" width="100%">
			<s:RadioButton id="cash" groupName="is_cash" value="1" label="نقدی"/>
			<s:RadioButton id="notCash" groupName="is_cash" value="0" label="غیر نقدی"/>
		</s:FormItem>
		<s:FormItem label="شرایط" width="100%">
			<s:TextArea id="condition" width="450" height="100"/>
		</s:FormItem>
		
		<s:FormItem label="مالیات کل" width="100%">
			<s:TextInput id="totalTax" width="100" textAlign="center" text="0" direction="ltr"/>
		</s:FormItem>
		<s:FormItem label="تخفیف کل" width="100%">
			<s:TextInput id="totalDiscount" width="100" textAlign="center" text="0" direction="ltr"/>
		</s:FormItem>
		
		<s:FormItem width="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle"/>
			</s:layout>
			<components:IconButton id="submit" label="ذخیره اطلاعات" click="submit_clickHandler(event)"/>
			<s:Label id="message" text="اطلاعات با موفقیت در بانک اطلاعاتی ذخیره شد." color="0x728e00" alpha="0">
				<s:filters>
					<s:DropShadowFilter distance="1" quality="3" blurX="0" blurY="0" color="0xffffff"/>
				</s:filters>
			</s:Label>
		</s:FormItem>
		<s:FormItem id="summery" width="100%" styleName="validation" alpha="0">
		</s:FormItem>
	</s:Form>
</forms:AbstractForm>
